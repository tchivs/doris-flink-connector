/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}
repositories {
    mavenCentral()
    mavenLocal()
}
group = 'org.apache.doris'
version = '1.20.0'
description = 'Flink : Connectors : Doris'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withSourcesJar()
}
configurations {
    flinkShadowJar
    // 一定要排除这些依赖(以及传递依赖)，因为它们是Flink提供的
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

dependencies {
    flinkShadowJar 'org.apache.doris:thrift-service:1.0.1'

    implementation 'org.apache.flink:flink-clients:1.20.0'
    implementation 'org.apache.flink:flink-table-planner-loader:1.20.0'
    implementation 'org.apache.flink:flink-connector-base:1.20.0'
    implementation 'org.apache.flink:flink-table-api-java-bridge:1.20.0'
    implementation 'org.apache.flink:flink-table-runtime:1.20.0'
    implementation 'org.apache.flink:flink-python:1.20.0'
    implementation 'org.apache.flink:flink-runtime-web:1.20.0'

    flinkShadowJar('org.apache.thrift:libthrift:0.20.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore'
    }
    flinkShadowJar('org.apache.httpcomponents:httpclient:4.5') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    flinkShadowJar 'commons-codec:commons-codec:1.17.0'
    flinkShadowJar 'org.apache.arrow:arrow-vector:16.1.0'
    runtimeOnly('org.apache.arrow:arrow-memory-netty:16.0.0') {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.google.guava:guava:33.2.1-jre'
    compileOnly 'org.slf4j:slf4j-log4j12:2.0.13'

    implementation('org.apache.flink:flink-sql-connector-mysql-cdc:3.1.1') {
        exclude group: 'org.apache.flink', module: 'flink-shaded-guava'
    }
    implementation('org.apache.flink:flink-sql-connector-oracle-cdc:3.1.1') {
        exclude group: 'org.apache.flink', module: 'flink-shaded-guava'
    }
    implementation('org.apache.flink:flink-sql-connector-postgres-cdc:3.1.1') {
        exclude group: 'org.apache.flink', module: 'flink-shaded-guava'
    }
    implementation('org.apache.flink:flink-sql-connector-sqlserver-cdc:3.1.1') {
        exclude group: 'org.apache.flink', module: 'flink-shaded-guava'
    }
    implementation('org.apache.flink:flink-sql-connector-mongodb-cdc:3.1.1') {
        exclude group: 'org.apache.flink', module: 'flink-shaded-guava'
    }

    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation 'org.mockito:mockito-inline:4.2.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:mysql:1.17.6'
    testImplementation 'org.apache.flink:flink-table-common:1.20.0:tests'
    testImplementation 'org.apache.flink:flink-test-utils:1.20.0'
    testImplementation 'com.mysql:mysql-connector-j:9.0.0'
    compileOnly 'com.oracle.database.jdbc:ojdbc6:11.2.0.4'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    // Try to turn them all off automatically
    options.compilerArgs << '-Xlint:none'
    options.compilerArgs << '-nowarn' // same as '-Xlint:none'

    // Turn them off manually
    options.compilerArgs << '-Xlint:-auxiliaryclass'
    options.compilerArgs << '-Xlint:-cast'
    options.compilerArgs << '-Xlint:-classfile'
    options.compilerArgs << '-Xlint:-deprecation'
    options.compilerArgs << '-Xlint:-dep-ann'
    options.compilerArgs << '-Xlint:-divzero'
    options.compilerArgs << '-Xlint:-empty'
    options.compilerArgs << '-Xlint:-fallthrough'
    options.compilerArgs << '-Xlint:-finally'
    options.compilerArgs << '-Xlint:-options'
    options.compilerArgs << '-Xlint:-overloads'
    options.compilerArgs << '-Xlint:-overrides'
    options.compilerArgs << '-Xlint:-path'
    options.compilerArgs << '-Xlint:-processing'
    options.compilerArgs << '-Xlint:-rawtypes'
    options.compilerArgs << '-Xlint:-serial'
    options.compilerArgs << '-Xlint:-static'
    options.compilerArgs << '-Xlint:-try'
    options.compilerArgs << '-Xlint:-unchecked'
    options.compilerArgs << '-Xlint:-varargs'

}

//tasks.withType(Test).configureEach {
//    useJUnitPlatform()
//}
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar
    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar
    javadoc.classpath += configurations.flinkShadowJar
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    zip64 true
}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
    mergeServiceFiles()
    zip64 true
}